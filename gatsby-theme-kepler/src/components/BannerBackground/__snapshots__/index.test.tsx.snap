// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`BannerBackground Component renders as expected 1`] = `
.emotion-0 {
  position: relative;
}

.emotion-0::before,
.emotion-0::after {
  content: "";
  display: block;
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  -webkit-transition: opacity 0.5s ease 0.25s;
  transition: opacity 0.5s ease 0.25s;
  background-position: center;
  background-repeat: no-repeat;
  background-size: cover;
}

.emotion-0::before {
  z-index: -101;
  opacity: 1;
  background-image: url("data+image/svg+xml");
}

@media screen and (prefers-color-scheme:dark) {
  .emotion-0::before {
    background-image: url("data+image/svg+xml");
  }
}

.emotion-0::after {
  z-index: -100;
  opacity: 0;
}

<div
  className="emotion-0"
  data-testid="BackgroundImageContainerElement"
>
  <noscript
    className="115ppu3-noscriptStyle"
  >
    <style
      dangerouslySetInnerHTML={
        Object {
          "__html": "noscript{opacity:1;background-image:url(\\"/static/banner_example/1/banner.jpg\\"); @media screen and (prefers-color-scheme: dark){background-image:url(\\"/static/banner_example/1/banner_dark.jpg\\");};;/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9pbmRleC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBaUNrQiIsImZpbGUiOiIuLi9zcmMvaW5kZXgudHN4Iiwic291cmNlc0NvbnRlbnQiOlsiLyoqIEBqc3gganN4ICovXG5pbXBvcnQgeyBQcm9wc1dpdGhDaGlsZHJlbiwgRnVuY3Rpb25Db21wb25lbnQgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IGdyYXBocWwgfSBmcm9tIFwiZ2F0c2J5XCI7XG5pbXBvcnQgeyBjc3MsIGpzeCwgU2VyaWFsaXplZFN0eWxlcyB9IGZyb20gXCJAZW1vdGlvbi9jb3JlXCI7XG5pbXBvcnQgeyBiYWNrZ3JvdW5kSW1hZ2VzIH0gZnJvbSBcInBvbGlzaGVkXCI7XG5pbXBvcnQgeyB1c2VJblZpZXcgfSBmcm9tIFwicmVhY3QtaW50ZXJzZWN0aW9uLW9ic2VydmVyXCI7XG5pbXBvcnQgeyB1c2VXZWJQU3VwcG9ydENoZWNrIH0gZnJvbSBcInJlYWN0LXVzZS13ZWJwLXN1cHBvcnQtY2hlY2tcIjtcblxuZXhwb3J0IGludGVyZmFjZSBCYWNrZ3JvdW5kSW1hZ2VPYmplY3Qge1xuICBiYXNlNjQ6IHN0cmluZztcbiAgc3JjOiBzdHJpbmc7XG4gIHNyY1dlYnA6IHN0cmluZztcbiAgbWVkaWE/OiBzdHJpbmc7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZUJhY2tncm91bmRzKFxuICBpbWc6IEJhY2tncm91bmRJbWFnZU9iamVjdCB8IEJhY2tncm91bmRJbWFnZU9iamVjdFtdLFxuICBzdXBwb3J0c1dlYlAgPSBmYWxzZVxuKTogU2VyaWFsaXplZFN0eWxlcyB7XG4gIGlmIChBcnJheS5pc0FycmF5KGltZykpIHtcbiAgICBjb25zdCBiYWNrZ3JvdW5kc1dpdGhvdXRRdWVyeSA9IChpbWcgYXMgQXJyYXk8QmFja2dyb3VuZEltYWdlT2JqZWN0PilcbiAgICAgIC5maWx0ZXIoYXNzZXQgPT4gIWFzc2V0Lm1lZGlhKVxuICAgICAgLm1hcChhc3NldCA9PlxuICAgICAgICBhc3NldC5zcmNXZWJwICYmIHN1cHBvcnRzV2ViUFxuICAgICAgICAgID8gYHVybChcIiR7YXNzZXQuc3JjV2VicH1cIilgXG4gICAgICAgICAgOiBgdXJsKFwiJHthc3NldC5zcmN9XCIpYFxuICAgICAgKTtcblxuICAgIGNvbnN0IGJhY2tncm91bmRzV2l0aFF1ZXJ5ID0gKGltZyBhcyBBcnJheTxCYWNrZ3JvdW5kSW1hZ2VPYmplY3Q+KVxuICAgICAgLmZpbHRlcihhc3NldCA9PiBCb29sZWFuKGFzc2V0Lm1lZGlhKSlcbiAgICAgIC5tYXAoYXNzZXQgPT4ge1xuICAgICAgICBjb25zdCBiYWNrZ3JvdW5kSW1hZ2UgPVxuICAgICAgICAgIGFzc2V0LnNyY1dlYnAgJiYgc3VwcG9ydHNXZWJQID8gYXNzZXQuc3JjV2VicCA6IGFzc2V0LnNyYztcbiAgICAgICAgcmV0dXJuIGNzc2BcbiAgICAgICAgICBAbWVkaWEgJHthc3NldC5tZWRpYX0ge1xuICAgICAgICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiJHtiYWNrZ3JvdW5kSW1hZ2V9XCIpO1xuICAgICAgICAgIH1cbiAgICAgICAgYDtcbiAgICAgIH0pO1xuXG4gICAgcmV0dXJuIGNzc2BcbiAgICAgICR7YmFja2dyb3VuZEltYWdlcyguLi5iYWNrZ3JvdW5kc1dpdGhvdXRRdWVyeSl9XG4gICAgICAke2JhY2tncm91bmRzV2l0aFF1ZXJ5fVxuICAgIGA7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIGNyZWF0ZUJhY2tncm91bmRzKFtpbWddLCBzdXBwb3J0c1dlYlApO1xuICB9XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZUJhY2t1cEJhY2tncm91bmRzKFxuICBpbWc6IEJhY2tncm91bmRJbWFnZU9iamVjdCB8IEJhY2tncm91bmRJbWFnZU9iamVjdFtdXG4pOiBTZXJpYWxpemVkU3R5bGVzIHtcbiAgaWYgKEFycmF5LmlzQXJyYXkoaW1nKSkge1xuICAgIGNvbnN0IGJhY2tncm91bmRzV2l0aG91dFF1ZXJ5ID0gKGltZyBhcyBBcnJheTxCYWNrZ3JvdW5kSW1hZ2VPYmplY3Q+KVxuICAgICAgLmZpbHRlcihhc3NldCA9PiAhYXNzZXQubWVkaWEpXG4gICAgICAubWFwKGFzc2V0ID0+IGB1cmwoXCIke2Fzc2V0LmJhc2U2NH1cIilgKTtcblxuICAgIGNvbnN0IGJhY2tncm91bmRzV2l0aFF1ZXJ5ID0gKGltZyBhcyBBcnJheTxCYWNrZ3JvdW5kSW1hZ2VPYmplY3Q+KVxuICAgICAgLmZpbHRlcihhc3NldCA9PiBCb29sZWFuKGFzc2V0Lm1lZGlhKSlcbiAgICAgIC5tYXAoXG4gICAgICAgIGFzc2V0ID0+IGNzc2BcbiAgICAgICAgICBAbWVkaWEgJHthc3NldC5tZWRpYX0ge1xuICAgICAgICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiJHthc3NldC5iYXNlNjR9XCIpO1xuICAgICAgICAgIH1cbiAgICAgICAgYFxuICAgICAgKTtcblxuICAgIHJldHVybiBjc3NgXG4gICAgICAke2JhY2tncm91bmRJbWFnZXMoLi4uYmFja2dyb3VuZHNXaXRob3V0UXVlcnkpfVxuICAgICAgJHtiYWNrZ3JvdW5kc1dpdGhRdWVyeX1cbiAgICBgO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiBjcmVhdGVCYWNrdXBCYWNrZ3JvdW5kcyhbaW1nXSk7XG4gIH1cbn1cblxuaW50ZXJmYWNlIFByb3BzIHtcbiAgaW1hZ2U6IEJhY2tncm91bmRJbWFnZU9iamVjdCB8IEJhY2tncm91bmRJbWFnZU9iamVjdFtdO1xuICBlYWdlcj86IGJvb2xlYW47XG4gIHRhZz86IGtleW9mIEpTWC5JbnRyaW5zaWNFbGVtZW50cztcbn1cblxuY29uc3QgZGVmYXVsdFByb3BzOiBQYXJ0aWFsPFByb3BzPiA9IHtcbiAgdGFnOiBcImRpdlwiLFxuICBlYWdlcjogZmFsc2Vcbn07XG5cbmV4cG9ydCBjb25zdCBCYWNrZ3JvdW5kSW1hZ2U6IEZ1bmN0aW9uQ29tcG9uZW50PFByb3BzV2l0aENoaWxkcmVuPFByb3BzPj4gPSAoXG4gIHByb3BzOiBQcm9wc1dpdGhDaGlsZHJlbjxQcm9wcz5cbikgPT4ge1xuICAvLyBMZXQncyBwcmV0ZW5kIHdoYXRldmVyIGVsZW1lbnQgdGhpcyBpcyBzdXBwb25zZWQgdG8gYmUgaXMgYSBkaXYsIHNvIHRoZSBUeXBlU2NyaXB0IHN0b3BzIGZyZWFraW5nIG91dCBhYm91dCBjb21wbGV4aXR5LlxuICBjb25zdCBDb250YWluZXJFbGVtZW50ID0gcHJvcHMudGFnIGFzIFwiZGl2XCI7XG4gIGNvbnN0IFtyZWYsIGluVmlld10gPSB1c2VJblZpZXcoe1xuICAgIHRyaWdnZXJPbmNlOiB0cnVlXG4gIH0pO1xuICBjb25zdCBzdXBwb3J0c1dlYlAgPSB1c2VXZWJQU3VwcG9ydENoZWNrKCk7XG5cbiAgY29uc3Qgbm9zY3JpcHRTdHlsZSA9IGNzc2BcbiAgICBub3NjcmlwdCB7XG4gICAgICBvcGFjaXR5OiAxO1xuICAgICAgJHtjcmVhdGVCYWNrZ3JvdW5kcyhwcm9wcy5pbWFnZSl9XG4gICAgfVxuICBgO1xuXG4gIHJldHVybiAoXG4gICAgPENvbnRhaW5lckVsZW1lbnRcbiAgICAgIHJlZj17cmVmfVxuICAgICAgZGF0YS10ZXN0aWQ9XCJCYWNrZ3JvdW5kSW1hZ2VDb250YWluZXJFbGVtZW50XCJcbiAgICAgIGNzcz17Y3NzYFxuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG5cbiAgICAgICAgOjpiZWZvcmUsXG4gICAgICAgIDo6YWZ0ZXIge1xuICAgICAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgICAgICB0b3A6IDA7XG4gICAgICAgICAgbGVmdDogMDtcbiAgICAgICAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuNXMgZWFzZSAwLjI1cztcbiAgICAgICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XG4gICAgICAgICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgICAgICAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICAgICAgICB9XG5cbiAgICAgICAgOjpiZWZvcmUge1xuICAgICAgICAgIHotaW5kZXg6IC0xMDE7XG4gICAgICAgICAgb3BhY2l0eTogMTtcbiAgICAgICAgICAke2NyZWF0ZUJhY2t1cEJhY2tncm91bmRzKHByb3BzLmltYWdlKX07XG4gICAgICAgIH1cblxuICAgICAgICA6OmFmdGVyIHtcbiAgICAgICAgICB6LWluZGV4OiAtMTAwO1xuICAgICAgICAgIG9wYWNpdHk6ICR7aW5WaWV3IHx8IHByb3BzLmVhZ2VyID8gXCIxXCIgOiBcIjBcIn07XG4gICAgICAgICAgJHsoaW5WaWV3IHx8IHByb3BzLmVhZ2VyKSAmJlxuICAgICAgICAgICAgY3JlYXRlQmFja2dyb3VuZHMocHJvcHMuaW1hZ2UsIHN1cHBvcnRzV2ViUCl9O1xuICAgICAgICB9XG4gICAgICBgfVxuICAgID5cbiAgICAgIDxub3NjcmlwdCBjbGFzc05hbWU9e25vc2NyaXB0U3R5bGUubmFtZX0+XG4gICAgICAgIDxzdHlsZVxuICAgICAgICAgIGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MPXt7XG4gICAgICAgICAgICBfX2h0bWw6IG5vc2NyaXB0U3R5bGUuc3R5bGVzXG4gICAgICAgICAgfX1cbiAgICAgICAgLz5cbiAgICAgIDwvbm9zY3JpcHQ+XG4gICAgICB7cHJvcHMuY2hpbGRyZW59XG4gICAgPC9Db250YWluZXJFbGVtZW50PlxuICApO1xufTtcblxuQmFja2dyb3VuZEltYWdlLmRlZmF1bHRQcm9wcyA9IGRlZmF1bHRQcm9wcztcblxuZXhwb3J0IGNvbnN0IEdhdHNieUJhY2tncm91bmRJbWFnZVNoYXJwRml4ZWQgPSBncmFwaHFsYFxuICBmcmFnbWVudCBHYXRzYnlCYWNrZ3JvdW5kSW1hZ2VTaGFycEZpeGVkIG9uIEltYWdlU2hhcnBGaXhlZCB7XG4gICAgYmFzZTY0XG4gICAgc3JjXG4gICAgc3JjV2VicFxuICB9XG5gO1xuXG5leHBvcnQgY29uc3QgR2F0c2J5SW1hZ2VTaGFycEZsdWlkID0gZ3JhcGhxbGBcbiAgZnJhZ21lbnQgR2F0c2J5QmFja2dyb3VuZEltYWdlU2hhcnBGbHVpZCBvbiBJbWFnZVNoYXJwRmx1aWQge1xuICAgIGJhc2U2NFxuICAgIHNyY1xuICAgIHNyY1dlYnBcbiAgfVxuYDtcbiJdfQ== */};label:noscriptStyle;/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9pbmRleC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBaUcyQiIsImZpbGUiOiIuLi9zcmMvaW5kZXgudHN4Iiwic291cmNlc0NvbnRlbnQiOlsiLyoqIEBqc3gganN4ICovXG5pbXBvcnQgeyBQcm9wc1dpdGhDaGlsZHJlbiwgRnVuY3Rpb25Db21wb25lbnQgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IGdyYXBocWwgfSBmcm9tIFwiZ2F0c2J5XCI7XG5pbXBvcnQgeyBjc3MsIGpzeCwgU2VyaWFsaXplZFN0eWxlcyB9IGZyb20gXCJAZW1vdGlvbi9jb3JlXCI7XG5pbXBvcnQgeyBiYWNrZ3JvdW5kSW1hZ2VzIH0gZnJvbSBcInBvbGlzaGVkXCI7XG5pbXBvcnQgeyB1c2VJblZpZXcgfSBmcm9tIFwicmVhY3QtaW50ZXJzZWN0aW9uLW9ic2VydmVyXCI7XG5pbXBvcnQgeyB1c2VXZWJQU3VwcG9ydENoZWNrIH0gZnJvbSBcInJlYWN0LXVzZS13ZWJwLXN1cHBvcnQtY2hlY2tcIjtcblxuZXhwb3J0IGludGVyZmFjZSBCYWNrZ3JvdW5kSW1hZ2VPYmplY3Qge1xuICBiYXNlNjQ6IHN0cmluZztcbiAgc3JjOiBzdHJpbmc7XG4gIHNyY1dlYnA6IHN0cmluZztcbiAgbWVkaWE/OiBzdHJpbmc7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZUJhY2tncm91bmRzKFxuICBpbWc6IEJhY2tncm91bmRJbWFnZU9iamVjdCB8IEJhY2tncm91bmRJbWFnZU9iamVjdFtdLFxuICBzdXBwb3J0c1dlYlAgPSBmYWxzZVxuKTogU2VyaWFsaXplZFN0eWxlcyB7XG4gIGlmIChBcnJheS5pc0FycmF5KGltZykpIHtcbiAgICBjb25zdCBiYWNrZ3JvdW5kc1dpdGhvdXRRdWVyeSA9IChpbWcgYXMgQXJyYXk8QmFja2dyb3VuZEltYWdlT2JqZWN0PilcbiAgICAgIC5maWx0ZXIoYXNzZXQgPT4gIWFzc2V0Lm1lZGlhKVxuICAgICAgLm1hcChhc3NldCA9PlxuICAgICAgICBhc3NldC5zcmNXZWJwICYmIHN1cHBvcnRzV2ViUFxuICAgICAgICAgID8gYHVybChcIiR7YXNzZXQuc3JjV2VicH1cIilgXG4gICAgICAgICAgOiBgdXJsKFwiJHthc3NldC5zcmN9XCIpYFxuICAgICAgKTtcblxuICAgIGNvbnN0IGJhY2tncm91bmRzV2l0aFF1ZXJ5ID0gKGltZyBhcyBBcnJheTxCYWNrZ3JvdW5kSW1hZ2VPYmplY3Q+KVxuICAgICAgLmZpbHRlcihhc3NldCA9PiBCb29sZWFuKGFzc2V0Lm1lZGlhKSlcbiAgICAgIC5tYXAoYXNzZXQgPT4ge1xuICAgICAgICBjb25zdCBiYWNrZ3JvdW5kSW1hZ2UgPVxuICAgICAgICAgIGFzc2V0LnNyY1dlYnAgJiYgc3VwcG9ydHNXZWJQID8gYXNzZXQuc3JjV2VicCA6IGFzc2V0LnNyYztcbiAgICAgICAgcmV0dXJuIGNzc2BcbiAgICAgICAgICBAbWVkaWEgJHthc3NldC5tZWRpYX0ge1xuICAgICAgICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiJHtiYWNrZ3JvdW5kSW1hZ2V9XCIpO1xuICAgICAgICAgIH1cbiAgICAgICAgYDtcbiAgICAgIH0pO1xuXG4gICAgcmV0dXJuIGNzc2BcbiAgICAgICR7YmFja2dyb3VuZEltYWdlcyguLi5iYWNrZ3JvdW5kc1dpdGhvdXRRdWVyeSl9XG4gICAgICAke2JhY2tncm91bmRzV2l0aFF1ZXJ5fVxuICAgIGA7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIGNyZWF0ZUJhY2tncm91bmRzKFtpbWddLCBzdXBwb3J0c1dlYlApO1xuICB9XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZUJhY2t1cEJhY2tncm91bmRzKFxuICBpbWc6IEJhY2tncm91bmRJbWFnZU9iamVjdCB8IEJhY2tncm91bmRJbWFnZU9iamVjdFtdXG4pOiBTZXJpYWxpemVkU3R5bGVzIHtcbiAgaWYgKEFycmF5LmlzQXJyYXkoaW1nKSkge1xuICAgIGNvbnN0IGJhY2tncm91bmRzV2l0aG91dFF1ZXJ5ID0gKGltZyBhcyBBcnJheTxCYWNrZ3JvdW5kSW1hZ2VPYmplY3Q+KVxuICAgICAgLmZpbHRlcihhc3NldCA9PiAhYXNzZXQubWVkaWEpXG4gICAgICAubWFwKGFzc2V0ID0+IGB1cmwoXCIke2Fzc2V0LmJhc2U2NH1cIilgKTtcblxuICAgIGNvbnN0IGJhY2tncm91bmRzV2l0aFF1ZXJ5ID0gKGltZyBhcyBBcnJheTxCYWNrZ3JvdW5kSW1hZ2VPYmplY3Q+KVxuICAgICAgLmZpbHRlcihhc3NldCA9PiBCb29sZWFuKGFzc2V0Lm1lZGlhKSlcbiAgICAgIC5tYXAoXG4gICAgICAgIGFzc2V0ID0+IGNzc2BcbiAgICAgICAgICBAbWVkaWEgJHthc3NldC5tZWRpYX0ge1xuICAgICAgICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiJHthc3NldC5iYXNlNjR9XCIpO1xuICAgICAgICAgIH1cbiAgICAgICAgYFxuICAgICAgKTtcblxuICAgIHJldHVybiBjc3NgXG4gICAgICAke2JhY2tncm91bmRJbWFnZXMoLi4uYmFja2dyb3VuZHNXaXRob3V0UXVlcnkpfVxuICAgICAgJHtiYWNrZ3JvdW5kc1dpdGhRdWVyeX1cbiAgICBgO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiBjcmVhdGVCYWNrdXBCYWNrZ3JvdW5kcyhbaW1nXSk7XG4gIH1cbn1cblxuaW50ZXJmYWNlIFByb3BzIHtcbiAgaW1hZ2U6IEJhY2tncm91bmRJbWFnZU9iamVjdCB8IEJhY2tncm91bmRJbWFnZU9iamVjdFtdO1xuICBlYWdlcj86IGJvb2xlYW47XG4gIHRhZz86IGtleW9mIEpTWC5JbnRyaW5zaWNFbGVtZW50cztcbn1cblxuY29uc3QgZGVmYXVsdFByb3BzOiBQYXJ0aWFsPFByb3BzPiA9IHtcbiAgdGFnOiBcImRpdlwiLFxuICBlYWdlcjogZmFsc2Vcbn07XG5cbmV4cG9ydCBjb25zdCBCYWNrZ3JvdW5kSW1hZ2U6IEZ1bmN0aW9uQ29tcG9uZW50PFByb3BzV2l0aENoaWxkcmVuPFByb3BzPj4gPSAoXG4gIHByb3BzOiBQcm9wc1dpdGhDaGlsZHJlbjxQcm9wcz5cbikgPT4ge1xuICAvLyBMZXQncyBwcmV0ZW5kIHdoYXRldmVyIGVsZW1lbnQgdGhpcyBpcyBzdXBwb25zZWQgdG8gYmUgaXMgYSBkaXYsIHNvIHRoZSBUeXBlU2NyaXB0IHN0b3BzIGZyZWFraW5nIG91dCBhYm91dCBjb21wbGV4aXR5LlxuICBjb25zdCBDb250YWluZXJFbGVtZW50ID0gcHJvcHMudGFnIGFzIFwiZGl2XCI7XG4gIGNvbnN0IFtyZWYsIGluVmlld10gPSB1c2VJblZpZXcoe1xuICAgIHRyaWdnZXJPbmNlOiB0cnVlXG4gIH0pO1xuICBjb25zdCBzdXBwb3J0c1dlYlAgPSB1c2VXZWJQU3VwcG9ydENoZWNrKCk7XG5cbiAgY29uc3Qgbm9zY3JpcHRTdHlsZSA9IGNzc2BcbiAgICBub3NjcmlwdCB7XG4gICAgICBvcGFjaXR5OiAxO1xuICAgICAgJHtjcmVhdGVCYWNrZ3JvdW5kcyhwcm9wcy5pbWFnZSl9XG4gICAgfVxuICBgO1xuXG4gIHJldHVybiAoXG4gICAgPENvbnRhaW5lckVsZW1lbnRcbiAgICAgIHJlZj17cmVmfVxuICAgICAgZGF0YS10ZXN0aWQ9XCJCYWNrZ3JvdW5kSW1hZ2VDb250YWluZXJFbGVtZW50XCJcbiAgICAgIGNzcz17Y3NzYFxuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG5cbiAgICAgICAgOjpiZWZvcmUsXG4gICAgICAgIDo6YWZ0ZXIge1xuICAgICAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgICAgICB0b3A6IDA7XG4gICAgICAgICAgbGVmdDogMDtcbiAgICAgICAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuNXMgZWFzZSAwLjI1cztcbiAgICAgICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XG4gICAgICAgICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgICAgICAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICAgICAgICB9XG5cbiAgICAgICAgOjpiZWZvcmUge1xuICAgICAgICAgIHotaW5kZXg6IC0xMDE7XG4gICAgICAgICAgb3BhY2l0eTogMTtcbiAgICAgICAgICAke2NyZWF0ZUJhY2t1cEJhY2tncm91bmRzKHByb3BzLmltYWdlKX07XG4gICAgICAgIH1cblxuICAgICAgICA6OmFmdGVyIHtcbiAgICAgICAgICB6LWluZGV4OiAtMTAwO1xuICAgICAgICAgIG9wYWNpdHk6ICR7aW5WaWV3IHx8IHByb3BzLmVhZ2VyID8gXCIxXCIgOiBcIjBcIn07XG4gICAgICAgICAgJHsoaW5WaWV3IHx8IHByb3BzLmVhZ2VyKSAmJlxuICAgICAgICAgICAgY3JlYXRlQmFja2dyb3VuZHMocHJvcHMuaW1hZ2UsIHN1cHBvcnRzV2ViUCl9O1xuICAgICAgICB9XG4gICAgICBgfVxuICAgID5cbiAgICAgIDxub3NjcmlwdCBjbGFzc05hbWU9e25vc2NyaXB0U3R5bGUubmFtZX0+XG4gICAgICAgIDxzdHlsZVxuICAgICAgICAgIGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MPXt7XG4gICAgICAgICAgICBfX2h0bWw6IG5vc2NyaXB0U3R5bGUuc3R5bGVzXG4gICAgICAgICAgfX1cbiAgICAgICAgLz5cbiAgICAgIDwvbm9zY3JpcHQ+XG4gICAgICB7cHJvcHMuY2hpbGRyZW59XG4gICAgPC9Db250YWluZXJFbGVtZW50PlxuICApO1xufTtcblxuQmFja2dyb3VuZEltYWdlLmRlZmF1bHRQcm9wcyA9IGRlZmF1bHRQcm9wcztcblxuZXhwb3J0IGNvbnN0IEdhdHNieUJhY2tncm91bmRJbWFnZVNoYXJwRml4ZWQgPSBncmFwaHFsYFxuICBmcmFnbWVudCBHYXRzYnlCYWNrZ3JvdW5kSW1hZ2VTaGFycEZpeGVkIG9uIEltYWdlU2hhcnBGaXhlZCB7XG4gICAgYmFzZTY0XG4gICAgc3JjXG4gICAgc3JjV2VicFxuICB9XG5gO1xuXG5leHBvcnQgY29uc3QgR2F0c2J5SW1hZ2VTaGFycEZsdWlkID0gZ3JhcGhxbGBcbiAgZnJhZ21lbnQgR2F0c2J5QmFja2dyb3VuZEltYWdlU2hhcnBGbHVpZCBvbiBJbWFnZVNoYXJwRmx1aWQge1xuICAgIGJhc2U2NFxuICAgIHNyY1xuICAgIHNyY1dlYnBcbiAgfVxuYDtcbiJdfQ== */",
        }
      }
    />
  </noscript>
</div>
`;
